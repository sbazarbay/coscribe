{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBA,kEAA8B;AAC9B,sEAAqC;AACrC,mEAAgC;AAEhC,MAAM,GAAG,GAAG,qBAAO,GAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAE3B,kBAAQ,CAAC,OAAO,CAAC,gCAAgC,CAAC;KAC/C,IAAI,CAAC,GAAG,EAAE;IACT,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACtC,CAAC,CAAC;KACD,KAAK,CAAC,GAAG,CAAC,EAAE;IACX,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC;AAEL,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACxB,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACpB,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,EAAE,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"express\"","webpack:///external commonjs \"body-parser\"","webpack:///external commonjs \"mongoose\"","webpack:///webpack/bootstrap","webpack:///./apps/backend/auth/src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"express\");","module.exports = require(\"body-parser\");","module.exports = require(\"mongoose\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import express from 'express';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\n\nconst app = express();\napp.use(bodyParser.json());\n\nmongoose.connect('mongodb://localhost:27017/auth')\n  .then(() => {\n    console.log('Connected to MongoDB');\n  })\n  .catch(err => {\n    console.error('Failed to connect to MongoDB', err);\n  });\n\napp.get('/', (req, res) => {\n  res.send('Auth Service is running');\n});\n\nconst port = process.env.PORT || 3000;\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n"],"names":[],"sourceRoot":""}